package com.razvan.stritiromania.Activities;import android.content.Context;import android.content.Intent;import android.net.ConnectivityManager;import android.net.NetworkInfo;import android.net.Uri;import android.os.Bundle;import android.support.design.widget.Snackbar;import android.support.v7.app.AppCompatActivity;import android.view.View;import com.razvan.stritiromania.Managers.Manager;import com.razvan.stritiromania.Pojos.Models.NewsFeedModel;import com.razvan.stritiromania.R;import com.razvan.stritiromania.Views.NewsFeedLayout;import org.xmlpull.v1.XmlPullParserException;import java.io.IOException;import java.util.zip.DataFormatException;public class NewsFeedActivity extends AppCompatActivity  {    private String TAG = "News Feed Activity";    private NewsFeedLayout rootLayout;    private NewsFeedModel rootModel;    private String URLFORTEST="http://rss.realitatea.net/local.xml";    NewsFeedLayout.ViewListener viewListener=new NewsFeedLayout.ViewListener() {        @Override        public void onShareClicked(String URL,String title) {            Intent intent2 = new Intent(); intent2.setAction(Intent.ACTION_SEND);            intent2.setType("text/plain");            intent2.putExtra(Intent.EXTRA_TEXT, title+" -> "+URL);            startActivity(Intent.createChooser(intent2, "Distribuie prin:"));        }        @Override        public void onFavoriteClicked(String URL) {            Snackbar snackbar = Snackbar                    .make(rootLayout, "Articol  la FAVORITE !", Snackbar.LENGTH_LONG)                    .setAction("UNDO", new View.OnClickListener() {                        @Override                        public void onClick(View view) {                            Snackbar snackbar1 = Snackbar.make(rootLayout, "Articol sters de la FAVORITE !", Snackbar.LENGTH_SHORT);                            snackbar1.show();                        }                    });            snackbar.show();        }        @Override        public void onOpenCliked(String URL) {            Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(URL));            startActivity(browserIntent);        }    };    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        initModel();        initLayout();        setModelToLayout();        if(isConected()) {            rootLayout.getNoInternet().setVisibility(View.GONE);            populateNewsFeed();        }else{            rootLayout.setVisibility(View.VISIBLE);        }    }    private void initLayout(){        rootLayout= (NewsFeedLayout) View.inflate(this, R.layout.activity_news_feed, null);        rootLayout.setContext(NewsFeedActivity.this);        rootLayout.setViewListener(viewListener);        setContentView(rootLayout);        rootModel.addListener(rootLayout);    }    private void initModel() {        if (rootModel == null) {            rootModel = new NewsFeedModel();        }    }    private void setModelToLayout(){        if(rootModel!=null&&rootLayout!=null) {            rootLayout.setRootModel(rootModel);        }    }    private void populateNewsFeed(){        Thread initModelThread =new Thread(new Runnable() {            @Override            public void run() {                try {                    rootModel.setItemsList(Manager.getInstance().getRssFeedManager().readFeed(URLFORTEST));                } catch (XmlPullParserException e) {                    e.printStackTrace();                } catch (IOException e) {                    e.printStackTrace();                } catch (DataFormatException e) {                    e.printStackTrace();                }            }        });        initModelThread.setPriority(Thread.MAX_PRIORITY);        initModelThread.start();    }    private boolean isConected(){        ConnectivityManager cm = (ConnectivityManager)this.getSystemService(Context.CONNECTIVITY_SERVICE);        NetworkInfo activeNetwork = cm.getActiveNetworkInfo();        return  activeNetwork != null && activeNetwork.isConnectedOrConnecting();    }}