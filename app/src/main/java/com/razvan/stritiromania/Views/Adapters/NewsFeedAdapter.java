package com.razvan.stritiromania.Views.Adapters;import android.content.Context;import android.text.Html;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.TextView;import com.einmalfel.earl.Item;import com.razvan.stritiromania.Activities.NewsFeedActivity;import com.razvan.stritiromania.R;import com.razvan.stritiromania.Views.NewsFeedLayout;import com.squareup.picasso.Picasso;import java.util.List;/** * Created by Razvan'S PC on 19.03.2016. */public class NewsFeedAdapter extends BaseAdapter {    private String TAG="NewsFeedAdapter";    private List<Item> itemList;    private NewsFeedActivity context;    private LayoutInflater myLayoutInflater;    private NewsFeedLayout.ViewListener listener;    public NewsFeedAdapter(List<Item> itemList,NewsFeedActivity context,NewsFeedLayout.ViewListener listener) {        Log.e(TAG, "NewsFeedAdapter:" );        this.itemList=itemList;        this.context=context;        this.listener=listener;        myLayoutInflater = (LayoutInflater) context                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);    }    @Override    public int getCount() {        return itemList.size();    }    @Override    public Object getItem(int position) {        return itemList.get(position);    }    @Override    public long getItemId(int position) {        return position;    }    @Override    public View getView(int position, View convertView, ViewGroup parent) {        Log.e(TAG, "getView:");        convertView= myLayoutInflater.inflate(R.layout.row_item_news_adapter, null);        final Item feedItem= itemList.get(position);        TextView titleCard= (TextView) convertView.findViewById(R.id.cartTitle);        TextView descriptionCard= (TextView) convertView.findViewById(R.id.cardDescription);        ImageView imageCard= (ImageView) convertView.findViewById(R.id.cardImage);        titleCard.setText(feedItem.getTitle());        descriptionCard.setText(Html.fromHtml(feedItem.getDescription()));        ImageView shareImageView= (ImageView) convertView.findViewById(R.id.shareButton);        shareImageView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                listener.onShareClicked(feedItem.getLink(),feedItem.getTitle());            }        });        ImageView favoriteImageView= (ImageView) convertView.findViewById(R.id.favoriteButton);        favoriteImageView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                listener.onFavoriteClicked(feedItem);            }        });        ImageView openImageView= (ImageView) convertView.findViewById(R.id.openButton);        openImageView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                listener.onOpenCliked(feedItem.getLink());            }        });        Log.e(TAG, "getView: " + feedItem.getPublicationDate());        Log.e(TAG, "getView: " + feedItem.getAuthor());        Picasso.with(context)                .load(feedItem.getEnclosures().get(0).getLink())                .into(imageCard);        return convertView;    }}